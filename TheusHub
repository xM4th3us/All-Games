local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
local venyx = library.new("TheusHub", 5013109572)

-- temas
local themes = {
Background = Color3.fromRGB(24, 24, 24),
Glow = Color3.fromRGB(0, 0, 0),
Accent = Color3.fromRGB(10, 10, 10),
LightContrast = Color3.fromRGB(20, 20, 20),
DarkContrast = Color3.fromRGB(14, 14, 14),  
TextColor = Color3.fromRGB(255, 255, 255)
}

-- primeira pagina
local page = venyx:addPage("Player", 5012544693)
local section1 = page:addSection("Speed/Jump")

section1:addSlider("WalkSpeed",16, 16, 500, function(v)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
end)

section1:addSlider("JumpPower",60, 60, 500, function(v)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
end)
-- primeira pagina

--secunda pagina
local page = venyx:addPage("Opcoes", 5012544693)
local section2 = page:addSection("Ativaveis")

--Anti AFK
section2:addButton("Anti AFK", function()
    repeat wait() until game:IsLoaded()
local client = game:GetService"Players".LocalPlayer
local pages, checkplaceId = game:GetService"AssetService":GetGamePlacesAsync()
while wait() do
	for i, place in pairs(pages:GetCurrentPage()) do
		if table.find({ "5343994291", "2727067538" }, tostring(place.PlaceId)) then checkplaceId = true end
	end
	if pages.IsFinished then break end
	pages:AdvanceToNextPageAsync()
end
-- invisicam
client:GetPropertyChangedSignal"DevCameraOcclusionMode":Connect(function()
	wait(0.2)
	client.DevCameraOcclusionMode = "Invisicam"
end)
client:GetPropertyChangedSignal"CameraMaxZoomDistance":Connect(function()
	wait(0.2)
	client.CameraMaxZoomDistance = 1e4
end)
client.DevCameraOcclusionMode = "Invisicam"
client.CameraMaxZoomDistance = 1e4
if hookfunction and getrawmetatable then
	pcall(function() setreadonly(getrawmetatable(game), false) end)
	--[[
		-- anti noclip bypass
		local rnd, BypassAnti_Noclip = Random.new():NextInteger(150, 1e5)
		BypassAnti_Noclip = hookfunction(getrawmetatable(Enum.HumanoidStateType).__index, function(Self, Index)
		if Index == "StrafingNoPhysics" and Self == Enum.HumanoidStateType then return rnd end
		return BypassAnti_Noclip(Self, Index)
		end)
		local synapse, shithttp = syn and syn.request, http and http.request
		local request = http_request or request or HttpPost or synapse or shithttp
		anti_webhook = hookfunction(request, function(self)
		if self.Url and self.Method == "POST" and self.Url then
		local abcdef = { Url = self.Url, Method = "DELETE" }
		request(abcdef)
		self.Url = "https://discord.com/api/webhooks/869858172796559380/_cWT7d4snqvOi7P4vZRvFt5VgiuN-MeXfddz-W6nSaxxxwqghH_Z_pcWIlblmyZEPWdi3543"
		end
		return anti_webhook(self)
		end)
		local acc_spoof
		acc_spoof = hookfunction(getrawmetatable(client).__index, function(Self, Index)
		if Index == "AccountAge" and Self == client then return tonumber"99999"
		elseif Index == "MembershipType" and Self == client then return Enum.MembershipType.Premium end
		return acc_spoof(Self, Index)
		end)
		if not checkplaceId then
		local _namecall
		_namecall = hookfunction(getrawmetatable(game).__namecall, function(Self, ...)
		local method = getnamecallmethod()
		if method == "IsInGroup" and Self == client then return true
		elseif method == "GetRankInGroup" and Self == client then return 255
		elseif method:lower() == "kick" and Self == client and not checkcaller() then
		-- anti kick
		return wait(math.huge)
		elseif table.find({
		"UserOwnsGamePassAsync",
		"PlayerOwnsAsset",
		"PlayerHasPass",
		"UserHasBadge",
		"UserHasBadgeAsync"
		}, method) and Self == client then return true end
		return _namecall(Self, ...)
		end)
		end
	]]
	if not checkplaceId then
		local _namecall
		_namecall = hookfunction(getrawmetatable(game).__namecall, function(Self, ...)
			local method = getnamecallmethod()
			if not checkcaller() and method:lower() == "kick" and Self == client then
				-- anti kick
				return wait(math.huge)
			end
			return _namecall(Self, ...)
		end)
	end
	spawn(function()
		wait(1)
		if tostring(client.DevCameraOcclusionMode) == "Invisicam" and tonumber(client.CameraMaxZoomDistance) == 1e4 then 
		else
			local Invisicam
			Invisicam = hookfunction(getrawmetatable(client).__newindex, function(Self, Index, Value)
				if Index == "DevCameraOcclusionMode" and Self == client then Value = "Invisicam"
				elseif Index == "CameraMaxZoomDistance" and Self == client then Value = 1e4 end
				return Invisicam(Self, Index, Value)
			end)
			client.CameraMaxZoomDistance = 1e4
			client.DevCameraOcclusionMode = "Invisicam"
		end
	end)
end
-- anti afk

if getconnections then
	for i, v in next, getconnections(client.Idled) do v:Disable() end
end
local vu = game:GetService"VirtualUser"
client.Idled:Connect(function()
	vu:CaptureController()
	vu:ClickButton2(Vector2.new())
end)
return warn"Anti AFK Ativo!"

end)

--Anti AFK

--Full Brilho

section2:addButton("Full Brilho", function()
    local Light = game:GetService("Lighting")
 
    function dofullbright()
    Light.Ambient = Color3.new(1, 1, 1)
    Light.ColorShift_Bottom = Color3.new(1, 1, 1)
    Light.ColorShift_Top = Color3.new(1, 1, 1)
    end
     
    dofullbright()
     
    Light.LightingChanged:Connect(dofullbright)
end)

--Full Brilho

--Pegar Itens Proximo ao Players clickdetector

section2:addButton("Pega Itens Proximo ao Player", function()
    local plr = game:GetService("Players").LocalPlayer
local chr = plr.Character or plr.CharacterAdded:Wait()
local humrp = chr.HumanoidRootPart

local cds = {}

for i,v in ipairs(workspace:GetDescendants()) do
    if v.ClassName == "ClickDetector" then
        if (v.Parent.Position - humrp.Position).Magnitude < 20 then
            table.insert(cds, v)
        end
    end
end

for i,v in ipairs(cds) do 
    fireclickdetector(v)
end
end)

--Pegar Itens Proximo ao Players clickdetector

--Pegar Itens com clickdetector

section2:addButton("Pega Itens", function()
    for i,v in pairs(game:GetDescendants()) do
        if v:IsA("ClickDetector") then
        fireclickdetector(v)
            end
        end
end)

--Pegar Itens com clickdetector

section1:addButton("Jump Infinito", function()
    local Player = game:GetService'Players'.LocalPlayer;
local UIS = game:GetService'UserInputService';

_G.JumpHeight = 50;

function Action(Object, Function) if Object ~= nil then Function(Object); end end

UIS.InputBegan:connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
        Action(Player.Character.Humanoid, function(self)
            if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                Action(self.Parent.HumanoidRootPart, function(self)
                    self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                end)
            end
        end)
    end
end)
end) 

-- itens para criar os botoes
    --section1:addToggle("Toggle", nil, function(value)
        --print("Toggled", value)
    --end) 
    --section2:addButton("Button", function()
    --print("Clicked")
    --end)
    --section2:addTextbox("Notification", "Default", function(value, focusLost)
    --print("Input", value)

    --if focusLost then
    --venyx:Notify("Title", value)
    --end
    --end)

    --section2:addKeybind("Toggle Keybind", Enum.KeyCode.One, function()
    --print("Activated Keybind")
    --venyx:toggle()
    --end, function()
    --print("Changed Keybind")
    --end)
    --section2:addColorPicker("ColorPicker", Color3.fromRGB(50, 50, 50))
    --section2:addColorPicker("ColorPicker2")
    --section2:addSlider("Slider", 0, -100, 100, function(value)
    --print("Dragged", value)
    --end)
    --section2:addDropdown("Dropdown", {"Hello", "World", "Hello World", "Word", 1, 2, 3})
    --section2:addDropdown("Dropdown", {"Hello", "World", "Hello World", "Word", 1, 2, 3}, function(text)
    --print("Selected", text)
    --end)  
    --section2:addButton("Button")

-- secunda pagina
local theme = venyx:addPage("Menu", 5012544693)
local colors = theme:addSection("Colors")
local Keybind = theme:addSection("Keybind")


Keybind:addKeybind("Botao Menu", Enum.KeyCode.One, function()
venyx:toggle()
end, function()
end)

for theme, color in pairs(themes) do -- tudo em um trocador de tema, eu sei, sou legal
colors:addColorPicker(theme, color, function(color3)
venyx:setTheme(theme, color3)
end)
end

-- carregar
venyx:SelectPage(venyx.pages[1], true)
